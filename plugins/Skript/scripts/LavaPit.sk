script options:
    $ developer mode
on script load:
	set {lavapit.countdown} to false
	set {lavapit.players} to 0
	set {lavapit.going} to false
	set {pitfall.timer} to 0
	loop all players:
		set {lavapit.%loop-player%.playing} to false
command /lavapit:
	description: Starts it
	permission: sk.lavapit
	trigger:
		set {_chance} to 9
		loop blocks in radius 21 around {sk.lavapit}:
			loop-block is glowstone:
				set loop-block to air
			loop-block is bedrock:
				chance of {_chance}%:
					add location of loop-block to {lavapit.broken::*}
					set loop-block to glowstone
command /playpitfall:
	trigger:
		player can't hold 36 wood swords:
			message "&e&oClear your inventory &6&oand armor &e&obefore joining &4&lPit Fall&r&o&e&o!"
			stop
		if {lavapit.going} is true:
			message "&c&oA game is already in session!"
			stop
		else:
			{lavapit.%player%.playing} is not true
			{lavapit.players} is not set:
				set {lavapit.players} to 0
			{lavapit.%player%.playing} is not set:
				set {lavapit.%player%.playing} to false
			teleport player to {lavapit.spectate}
			make player execute "pet hide"
			player has the permission "essentials.fly.self":
				execute console command "fly off %player%"
			player is op:
				execute console command "god off %player%"
				execute console command "gms %player%"
			clear inventory of player
			add 1 to {lavapit.players}
			set {lavapit.%player%.playing} to true
			broadcast "&a&o%{lavapit.players}%&6&o users ready to play &4&lPit Fall&r&o&6&o. Type &b/pitfall&6&o to join."
on quit:
	{lavapit.%player%.playing} is true:
		set {lavapit.%player%.playing} to false
		subtract 1 from {lavapit.players}
	make player execute "spawn"
	make player execute "spawn"
command /leavepitfall:
	trigger:
		if {lavapit.%player%.playing} is true:
			set {lavapit.%player%.playing} to false
			set {lavapit.%player%.spectating} to false
			subtract 1 from {lavapit.players}
			message "&cYou have left PitFall."
			make player execute "spawn"
			make player execute "spawn"
		if {lavapit.%player%.spectating} is true:
			set {lavapit.%player%.playing} to false
			set {lavapit.%player%.spectating} to false
			subtract 1 from {lavapit.players}
			message "&cYou have left PitFall."
			make player execute "spawn"
			make player execute "spawn"
command /pitfall:
	trigger:
		teleport player to {lavapit.spectate}
command /startlava:
	permission: sk.lavapit
	trigger:
		{lavapit.countdown} is not true
		{lavapit.players} is not 1
		{lavapit.players} is not 0
		set {lavapit.countdown} to true
		loop all players:
			{lavapit.%loop-player%.playing} is true
			send "&4&lPit Fall&r&o starting in &a&l30&r&o seconds." to loop-player
		wait 15 seconds
		loop all players:
			{lavapit.%loop-player%.playing} is true
			send "&4&lPit Fall&r&o starting in &e&l15&r&o seconds." to loop-player
		wait 10 seconds
		loop all players:
			{lavapit.%loop-player%.playing} is true
			send "&4&lPit Fall&r&o starting in &c&l5&r&o seconds." to loop-player
			teleport loop-player to {lavapit.spawn}
			loop-player's gamemode is creative:
				execute console command "gms %loop-player%"
			loop-player is flying:
				execute console command "fly %loop-player%"
			heal loop-player
			set {pvp.%loop-player%} to 1
			execute console command "feed %loop-player%"
		wait 5 second
		set {lavapit.going} to true
		set {pitfall.timer} to 0
		loop all players:
			{lavapit.%loop-player%.playing} is true
			send "&4&o&lPit Fall has begun!." to loop-player
every 2 real seconds:
	if {lavapit.going} is true:
		execute console command "/lavapit"
		add 2 to {pitfall.timer}
command /setspotlava:
	permission: is.op
	trigger:
		set {sk.lavapit} to location of player
		message "Set anchor!"
command /setspec:
	permission: is.op
	trigger:
		set {lavapit.spectate} to location of player
		message "Set spec!"
command /setlavaspawn:
	permission: is.op
	trigger:
		set {lavapit.spawn} to location of player
		message "Set spawn!"
command /stoplava:
	permission: is.op
	trigger:
		set {lavapit.going} to false
		message "Stopped!"
on damage of player:
	if {lavapit.%attacker%.playing} is true:
		if damage cause is not lava:
			cancel event
	if {lavapit.%attacker%.playing} is true:
		if damage cause is not lava:
			cancel event
on login:
	if {lavapit.%player%.playing} is true:
		teleport player to {spawn}
		set {lavapit.%player%.playing} to false
	if {lavapit.%player%.playing} is true:
		teleport player to {spawn}
		set {lavapit.%player%.spectating} to false
on damage of a player:
	{lavapit.%victim%.playing} is true
	damage cause is lava
	kill the victim
on death of a player:
	{lavapit.%player%.playing} is true
	set {lavapit.%player%.playing} to false
	subtract 1 from {lavapit.players}
	teleport player to {lavapit.spectate}
	set {lavapit.%player%.spectating} to true
	set death message to "&a&o%player% &6&ois disqualified after surviving for %{pitfall.timer}% seconds."
	if {lavapit.going} is true:
		if {lavapit.players} is less than or equal to 1:
			set {lavapit.going} to false
			loop all players:
				{lavapit.%loop-player%.playing} is true:
					set {lavapit.%loop-player%.playing} to false
					set {lavapit.%loop-player%.spectating} to true
					broadcast "&a&o%loop-player%&6&o won &4Pit Fall&6&o by surviving for &e&o%{pitfall.timer}% &6&oseconds!"
					teleport loop-player to {lavapit.spectate}
					teleport loop-player to {lavapit.spectate}
			execute console command "/resetlava"
			set {lavapit.countdown} to false
on command:
	{lavapit.%player%.playing} is true:
		command is not "a" or "login" or "leavepitfall"
		message "&e&oNo commands permitted while playing Pit Fall."
		cancel the event
	{lavapit.%player%.spectating} is true:
		command is not "a" or "login" or "leavepitfall"
		message "&e&oNo commands permitted while playing Pit Fall."
		cancel the event
on respawn:
	{lavapit.%player%.spectating} is true:
		wait 1 tick
		message "&c&oYou are now out of the game."
		teleport player to {lavapit.spectate}
		set {lavapit.countdown} to false
command /resetlava:
	permission: lavapit.reset
	trigger:
		delete {lavapit.players}
		wait 1 real second
		loop {lavapit.broken::*}:
			set block at loop-value to bedrock
		wait 3 real seconds
		loop all players:
			{lavapit.%loop-player%.spectating} is true:
				set {lavapit.%loop-player%.spectating} to false
				make player execute "/spawn"
				wait 1 tick
				make player execute "/spawn"
		delete {lavapit.broken::*}
		message "Reset!"
on break:
	if {lavapit.%player%.playing} is true:
		cancel event
	if {lavapit.%player%.spectating} is true:
		cancel event