script options:
    $ developer mode
on script load:
	set {pogo.going} to false
	set {pogo.players} to 0
	loop all players:
		delete {pogo.%loop-player%.playing}
	set {pogo.session} to 10
on join:
	delete {pogo.%player%.playing}
	delete {pogo.%player%}
on tool change:
	player's tool is stick
	name of player's tool is "&6&lPogo Stick"
	set {pogo.%player%} to .8
command /pogo:
	trigger:
		message "&f[&bPogo&f] &eWelcome to Pogo!"
		teleport player to {pogo.lobby}
command /joinpogo:
	trigger:
		{pogo.%player%.playing} is not set
		player can't hold 36 wood swords:
			message "&e&oClear your inventory &6&oand armor &e&obefore joining &b&oPogo&e&o."
			stop
		set {pogo.%player%.playing} to true
		add 1 to {pogo.players}
		make player execute "pet hide"
		player has the permission "essentials.fly.self":
			execute console command "fly off %player%"
			execute console command "fly %player% off"
		player has the permission "essentials.socialspy":
			execute console command "god %player% off"
			execute console command "gms %player%"
		loop all players:
			{pogo.%loop-player%.playing} is set
			send "&f[&bPogo&f] &ePlayers ready: &f%{pogo.players}%" to loop-player
command /leavepogo:
	trigger:
		{pogo.%player%.playing} is true
		set {pogo.%player%.playing} to false
		teleport player to {spawn}
		teleport player to {spawn}
		subtract 1 from {pogo.players}
		message "&cYou have left &bPogo&c."
		execute console command "ci %player%"
command /startpogo:
	trigger:
		if {pogo.going} is true:
			message "&c&oA game is already in session!"
		else:
			if {pogo.players} is not 0 or 1:
				set {pogo.session} to 10
				loop all players:
					{pogo.%loop-player%.playing} is true
					send "&f[&bPogo&f] &eThe game will begin in 10 seconds!" to loop-player
				wait 6 real seconds
				loop all players:
					{pogo.%loop-player%.playing} is true
					execute console command "tm msg %loop-player% &63"
					teleport loop-player to {pogo}
					set {pogo.%loop-player%.last} to now
				wait 1 real second
				loop all players:
					{pogo.%loop-player%.playing} is true
					execute console command "tm msg %loop-player% &62"
				wait 1 real second
				loop all players:
					{pogo.%loop-player%.playing} is true
					execute console command "tm msg %loop-player% &61"
				wait 1 real second
				loop all players:
					{pogo.%loop-player%.playing} is true
					execute console command "tm msg %loop-player% &aPOGO"
					execute console command "give %loop-player% stick 1 name:&6&lPogo_Stick"
				set {pogo.going} to true
				wait 60 real seconds
				loop all players:
					{pogo.%loop-player%.playing} is true
					send "&f[&bPogo&f] &c1 minute remaining!" to loop-player
				wait 50 real seconds
				loop all players:
					{pogo.%loop-player%.playing} is true
					send "&f[&bPogo&f] &c10 seconds remaining!" to loop-player
				wait 10 real seconds
				loop all players:
					{pogo.%loop-player%.playing} is true
					delete {pogo.%loop-player%.playing}
					execute console command "tm msg %loop-player% &6STOP!"
					clear inventory of loop-player
					set tool of loop-player to air
					set {pogo.%player%.delay} to 20
					teleport loop-player to {pogo.lobby}
					teleport loop-player to {pogo.lobby}
					execute console command "ci %loop-player%"
					set {pogo.%player%} to .8
				set {pogo.going} to false
				set {pogo.players} to 0
				wait 2 real seconds
				broadcast "&f[&bPogo&f] %{pogo.session.player}% is the winner with a height of %{pogo.session}% blocks!"
			else:
				message "&cRequires at least 2 players!"
command /setpogo:
	permission: is.pro
	trigger:
		set {pogo.lobby} to location of player
		message "&aSet pogo lobby spot!"
on sneak toggle:
	{pogo.%player%.playing} is true
	player is sneaking
	name of player's tool is "&6&lPogo Stick"
	if difference between now and {pogo.%player%.last} is less than 1 second:
		stop
	set {pogo.%player%.last} to now
	block below player is not air
	push the player upwards at speed {pogo.%player%}
	push the player forwards at speed 1
	set {pogo.%player%.launched} to true
	{pogo.%player%} is not .8 or 5:
		execute console command "tm msg %player% &a&l✓"
		wait 1 real second
		execute console command "tm msg %player% &a "
	{pogo.%player%} is not 10:
		add .4 to {pogo.%player%}
	{pogo.%player%} is 10:
		message "&f[&bPogo&f] &cAcheived maximum pogo altitude!"
	set {pogo.%player%.launched} to true
	if {pogo.%player%} is less than 2:
		set {pogo.%player%.delay} to 22
	if {pogo.%player%} is 1.6:
		set {pogo.%player%.delay} to 21
	if {pogo.%player%} is 2.4:
		set {pogo.%player%.delay} to 20
	if {pogo.%player%} is 3.5:
		set {pogo.%player%.delay} to 19
	if {pogo.%player%} is 4.4:
		set {pogo.%player%.delay} to 18
	if {pogo.%player%} is 5.6:
		set {pogo.%player%.delay} to 17
	if {pogo.%player%} is 6.8:
		set {pogo.%player%.delay} to 16
on damage of a player:
	damage cause is fall
	{pogo.%victim%.launched} is true
	cancel event
	set {pogo.%victim%.launched} to false
	loop {pogo.%victim%.delay} times:
		wait 1 tick
	block below victim is not air
	set {pogo.%victim%} to .8
	set {pogo.%victim%.delay} to 20
	execute console command "tm msg %player% &c&l✗"
	wait 1 real second
	execute console command "tm msg %player% &a "


every 2 ticks:
	loop all players:
		loop-player's tool is stick
		name of loop-player's tool is "&6&lPogo Stick"
		execute console command "tm amsg %loop-player% &a&lHeight: &f&l%altitude of loop-player% blocks"
		if altitude of loop-player is greater than {pogo.session}:
			set {pogo.session} to altitude of loop-player
			set {pogo.session.player} to loop-player
#			loop all players:
#				{pogo.%loop-player-2%} is set
#				send "&f[&bPogo&f] &eHighest height so far is %altitude of loop-player-1% by %loop-player-1%" to loop-player-2