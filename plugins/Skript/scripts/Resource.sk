#script options:
#    $ developer mode
command /resetresource:
	permission: essentials.socialspy
	trigger:
		message "&aNow resetting the resource world. Please wait..."
		loop all players in world "resource":
			teleport loop-player to {_spawn}
			teleport loop-player to {_spawn}
		loop all players in world "resource_nether":
			teleport loop-player to {_spawn}
			teleport loop-player to {_spawn}
		execute console command "mv delete resource_nether"
		wait 2 real seconds
		execute console command "mv confirm"
		wait 5 real seconds
		execute console command "mv delete resource"
		wait 2 real seconds
		execute console command "mv confirm"
		wait 5 real seconds
		execute console command "mv create resource NORMAL"
		wait 2 real seconds
		execute console command "mv load resource"
		wait 5 real seconds
		execute console command "mv create resource_nether NETHER"
		wait 2 real seconds
		execute console command "mv load resource_nether"
		wait 2 real seconds
		execute console command "mvnp link resource resource_nether"
		message "&cYou will be teleported to the new world in 15 seconds. Please wait."
		wait 15 real seconds
		set {resource.spawn} to the spawn point of "resource"
		teleport player to {resource.spawn}
		set player's gamemode to creative
		message " "
		message "&ePlease stand on flat ground and do &a/setplatform."
#on world change:
#	if event-world is not "resource":
#		execute console command "manselect metaomega"
#		wait 1 tick
#		if player has permission "nonspecificodyssey.biome.*":
#			execute console command "manudelp %event-player% nonspecificodyssey.biome.*"
#	else:
#		execute console command "manselect metaomega"
#		wait 1 tick
#		if player doesn't have the permission "nonspecificodyssey.biome.*":
#			execute console command "manuaddp %event-player% nonspecificodyssey.biome.*"
command /setplatform:
	permission: is.op
	trigger:
		message "&aGenerating..."
		set {resource.spawn} to player's location
		set {_playerspot} to location of player
		set the spawn point of "resource" to the player's location
		set {_py} to y-coordinate of {_playerspot}
		loop all blocks in radius 15 around player:
			set {_location} to location of loop-block
			set {_testy} to y-coordinate of {_location}
			if {_testy} is less than {_py}:
				set loop-block to sea lantern
			else:
				set loop-block to air
		message "&aPlatform was generated."
		wait 5 ticks
		message "&aBorder set! Now starting render of the world..."
		wait 10 ticks
		message "&aRoutine is complete! Rendering will run in the background."
		wait 5 ticks
		execute console command "skript reload Resource.sk"
command /resource:
	trigger:
		teleport player to {resource.spawn}
		message "&aWelcome to the Resource world!"
		message "&c&l&nDo not build here! This world resets often!"
		wait 2 real seconds
		message "&eType &a/biometp&e to warp to a biome of your choosing."
command /biometp <text>:
	trigger:
		if the player's world is "resource":
			run player command "biome %arg%" as op
#			message " "
#			message "&6&lShowing basic biome list"
#			message "&6&lBiome List &f(Click one)"
#			send umbaska json of "&f[ &aForest &f]" run "/biome FOREST" to player
#			send umbaska json of "&f[ &aDesert &f]" run "/biome DESERT" to player
#			send umbaska json of "&f[ &aPlains &f]" run "/biome PLAINS" to player
#			send umbaska json of "&f[ &aOcean &f]" run "/biome OCEAN" to player
#			send umbaska json of "&f[ &aSavanna &f]" run "/biome SAVANNA" to player
#			send umbaska json of "&f[ &aSwampland &f]" run "/biome SWAMPLAND" to player
#			send umbaska json of "&f[ &aJungle &f]" run "/biome JUNGLE" to player
#			send umbaska json of "&f[ &aTaiga &f]" run "/biome TAIGA" to player
#			send umbaska json of "&f[ &aExtreme Hills &f]" run "/biome EXTREME_HILLS" to player
#			send umbaska json of "&f[ &aFULL LIST &f]" run "/biome list" to player
		else:
			if player is not op:
				message "&cThis is only available in the resource world."
			else:
				make player execute "biome %arg%"
on command "craftio":
	message "Command and all arguments: %complete command%"
	message "Command: %command%"
	message "All the arguments: %arguments%"
on command:
	if player is in world "resource":
		if command is "warp":
			message "&f&oYou can't use those commands in resource!"
			cancel event
on command "/biome":
	if the player's world is not "resource":
		if player is not op:
			cancel event
			message "&cThis is only available in the resource world."
on break:
	player does not have the permission "is.op"
	player is in world "resource"
	distance between player and {resource.spawn} is less than 100:
		message "&cYou must go further away from spawn to break or place!"
		cancel event
on place:
	player does not have the permission "is.op"
	player is in world "resource"
	distance between player and {resource.spawn} is less than 100:
		message "&cYou must go further away from spawn to break or place!"
		cancel event
