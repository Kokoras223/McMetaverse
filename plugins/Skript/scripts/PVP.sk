variables:
        {logincount} = 10000
        {flogincount} = 252
        {arena.going} = false
command /challenge <player> <text>:
        description: Challenge a player to a PVP battle
        trigger:
                player can't hold 36 wood swords:
                        message "&e&oClear your inventory and armor before issuing a challenge."
                        stop
                {arena.going} is true:
                        message "&e&oPlease wait until the arena is available."
                        stop
                {arena.going} is not true:
                        set {challenge.defender} to arg 1
                        set {challenge.accepted} to false
                        set {challenge.challenger} to player
                        set {challenge.bet} to arg 2 parsed as integer
                        player's balance is less than {challenge.bet}:
                                message "&e&oYou don't have enough money to bet that much!"
                                stop
                        {challenge.defender}'s balance is less than {challenge.bet}:
                                message "&e&o%arg 1% can't match a bet that high!"
                                stop
                        set {arena.going} to true
                        broadcast "&a&o%player% &e&ohas issued a challenge to &b&o%arg 1%&e&o with a &a&o$%{challenge.bet}%&e&o bet!"
                        set {challenged.%arg 1%} to true
                        set {challenged.by.%arg 1%} to player
                        message "&e&oType &a&o/accept&e&o to rise to the challenge! &c&o/deny&r&e&o to back down." to argument 1
                        wait 1 real minute
                        {challenge.accepted} is false
                        set {challenged.%player%} to false
                        set {arena.going} to false
                        broadcast "&c&oThe challenge that was issued has expired!"
                        
command /deny:
        description: Accept a challenge
        trigger: 
                {challenged.%player%} is false:
                        message "&e&oNo pending challenges."
                        stop
                {challenged.%player%} is true:
                        set {challenged.%player%} to false
                        set {arena.going} to false
                        broadcast "&a&o%player%&e&o has declined the challenge by %{challenge.challenger}%."
command /accept:
        description: Accept a challenge
        trigger: 
                {challenged.%player%} is false:
                        message "&e&oNo pending challenges."
                        stop
                {challenged.%player%} is true:
                        player can't hold 36 wood swords:
                                message "&e&oClear your inventory and armor before accepting the challenge."
                                stop
                        broadcast "&b&o%player% &e&ohas accepted the challenge from &a&o%{challenged.by.%player%}%&e&o!"
                        set player's helmet to air
                        set player's chestplate to air
                        set player's leggings to air
                        set player's boots to air
                        set {challenge.accepted} to true
                        wait 5 real seconds
                        broadcast "&b&o%player% &e&ois now in the arena with &a&o%{challenged.by.%player%}%&e&o! Type &a&o/arena&e&o to spectate!"
                        teleport player to {pvp.one}
                        teleport {challenged.by.%player%} to {pvp.two}
                        wait 3 real seconds
                        message "&6&l&oPVP will be enabled in 5 seconds, and begins once both participants walk into the arena."
                        wait 5 real seconds
                        set {pvp.%player%} to 1
                        message "&e&oPVP is now &c&oactivated&r<yellow>"
                        message "&c&o&lBEGIN THE BLOODSHED!"
                        set {pvp.%{challenged.by.%player%}%} to 1
                        message "&PVP is now &c&oactivated&r<yellow>"
                        message "&c&o&lBEGIN THE BLOODSHED!" to {challenged.by.%player%}
on death:
        {arena.going} is true
        player is {challenge.defender}:
                broadcast "&b&o%player% &e&ohas been defeated by &a&o%{challenged.by.%player%}%&e&o! Winner keeps their bet and gets the loser's &a&o$%{challenge.bet}%&e&o!"
                execute console command "eco take %{challenge.defender}% %{challenge.bet}%"
                execute console command "eco give %{challenge.challenger}% %{challenge.bet}%"
                set {challenged.%player%} to false
                set {arena.going} to false
                set {pvp.%player%} to 1
                message "&e&oPVP is now &a&odeactivated&r<yellow>" to {challenged.by.%player%}
                set {pvp.%{challenged.by.%player%}%} to 1
                message "&e&oPVP is now &a&odeactivated&r<yellow>" to player
        player is {challenge.challenger}:
                broadcast "&b&o%player% &e&ohas been defeated by &a&o%{challenge.defender}%&e&o! Winner keeps their bet and gets the loser's &a&o$%{challenge.bet}%&e&o!"
                execute console command "eco give %{challenge.defender}% %{challenge.bet}%"
                execute console command "eco take %{challenge.challenger}% %{challenge.bet}%"
                set {challenged.%{challenge.defender}%} to false
                set {arena.going} to false
                set {pvp.%player%} to 1
                message "&e&oPVP is now &a&odeactivated&r<yellow>" to {challenged.by.%player%}
                set {pvp.%{challenged.by.%player%}%} to 1
                message "&e&oPVP is now &a&odeactivated&r<yellow>" to player
on quit:
        {arena.going} is true
    
command /resetchallenges:
        description: Accept a challenge
        trigger: 
                set {challenged.%player%} to false
                set {arena.going} to false
                message "Reset!"
command /setpvp1:
        description: Accept a challenge
        trigger: 
                set {pvp.one} to location of player
                message "Set spawn one!"
command /setpvp:
        description: Accept a challenge
        trigger: 
                set {pvp.spectator} to location of player
                message "Set spectator location!"
command /arena:
        description: Go to the arena
        trigger: 
                teleport player to {pvp.spectator}
                message "Set spectator location!"
command /setpvp2:
        description: Accept a challenge
        trigger: 
                set {pvp.two} to location of player
                message "Set spawn two!"
command /testloop:
        trigger:
                broadcast "[DEBUG] &e&oChecking %player% inventory..."
                if player can hold 36 wood swords:
                        set player's helmet to air
                        set player's chestplate to air
                        set player's leggings to air
                        set player's boots to air
                        broadcast "[DEBUG] &e&o%player% passed the check!"
                else:
                        broadcast "[DEBUG] &c&o%player% failed the check!"
on login:
        add 1 to {logincount}
        if {dailybonus.%player%} is not {bonus}:
                message "<gold><italic>You were given <light green>$200<gold> for logging in today!"
                execute console command "eco give %player% 200"
                set {dailybonus.%player%} to {bonus}
        else:
                message "<gold><italic>You have already received your daily login bonus!"

command /dev:
        description: Talks about the Dev team.
        trigger:
                message "<light green>Our current Development team is:"
                message "   - <yellow>MrProtagonist"
                message "   - <yellow>McNicholas"
                message "   - <yellow>CaptainStupid"
                message "   - <yellow>Colahdetank"
                message "   - <yellow>Bluedemon0015"
                message "   - <yellow>DrBloodbathMC"
                message "<light green>Current project:<gold> %{dev.current}%"

command /devstatus <text>:
        description: Update current dev project.
        trigger: 
                set {dev.current} to argument
                message "<light green>Dev project updated!"
                broadcast "&a&oUpdated &a&l&oDEV&r&a&o project to: &e&o%{dev.current}%"

on skript start:
        add 1 to {bonus}
        set {arena.going} to false

on first login:
        add 1 to {flogincount}

command /total:
        description: Find out how many unique users have logged into the server the first time.
        trigger:
                message "<light green>Currently a total of<yellow> %{flogincount}%<light green> different people have joined the server, and we have a total of well over<light red> %{logincount}%<light green> players logins."

options:
        #Toggle time
        #Sets HOW LONG to wait (/togglepvp)
        #You can use: <number> seconds/minutes/houra
        time to toggle pvp: 5 seconds

        #Default Mode
        #Sets default PVP State for the first login
        #You can use: 1 for enabled PVP state, 0 for disabled PVP state
        default mode: 0

        #Permissions
        #You may want to toggle this off, if you don't have a permissions plugin
        #You can use: 1 to enable permissions, 0 for disable permissions
        use permissions: 0
#OPTIONS END

on login:
        {pvp.%player%} is not set:
                {pvp.%player%} = {@default mode}
                
command /npcpvp <text>:
        description: Toggles PVP on or off for npcs.
        usage: /npcpvp <NPCName>
        executable by: players
        trigger:
                set {pvp.%arg 1%} to 1
                message "%arg 1% now accepts pvp."
command /pvpon:
        description: Toggles PVP on
        usage: /togglepvp
        executable by: players
        trigger:
                set {pvp.%player%} to 1
                message "<yellow>PVP is &c&oactivated&r<yellow>!"
                stop trigger
command /pvpoff:
        description: Toggles PVP on
        executable by: players
        trigger:
                set {pvp.%player%} to 1
                message "<yellow>PVP is &a&odeactivated&r<yellow>!"
                stop trigger
command /togglepvp:
        description: Toggles PVP on or off
        usage: /togglepvp
        aliases: /pvptoggle, /pvp
        executable by: players
        trigger:
                {@use permissions} is 1:
                        player doesn't have the permission "TogglePVP.toggle":
                                message "<red>You don't have the permission for this command!"
                                stop

                {pvp.%player%} is not set:
                        set {pvp.%player%} to {@default mode}

                {pvp.%player%} is 1:
                        set {_waited} to difference between {pvp.%player%.lastused} and now
                        if {_waited} is less than {@time to toggle pvp}:
                                stop
                        set {pvp.%player%.lastused} to now
                        message "<yellow>Your PVP gets &a&odeactivated&r<yellow> in &c{@time to toggle pvp}<yellow>!"
                        wait {@time to toggle pvp}
                        set {pvp.%player%} to 0
                        message "<yellow>PVP is &a&odeactivated&r<yellow>!"
                        stop trigger

                {pvp.%player%} is 0:
                        set {_waited} to difference between {pvp.%player%.lastused} and now
                        if {_waited} is less than {@time to toggle pvp}:
                                stop
                        message "<yellow>Your PVP gets &c&oactivated&r<yellow> in &c{@time to toggle pvp}<yellow>!"
                        wait {@time to toggle pvp}
                        set {pvp.%player%} to 1
                        message "<yellow>PVP is &c&oactivated&r<yellow>!"
                        stop trigger

on damage:
        victim is a player
        attacker is a player
        {pvp.%attacker%} is 0:
                attacker is a player
                victim is a player
                cancel event
                send "<yellow>You can't attack while your PVP is turned off!" to attacker
                stop trigger
        {pvp.%victim%} is 0:
                cancel event
                send "<yellow>You can't attack players that have PVP turned off!" to attacker
on damage:
        attacker's gamemode is creative
        victim is a player
        {pvp.%victim%} is 1:
                cancel event
                send "<yellow>You cannot attack while in creative!" to attacker
command /statepvp:
        description: Shows if you have PVP turned on
        usage: /statepvp
        aliases: /pvpstate
        executable by: players
        trigger:
                {@use permissions} is 1:
                        player doesn't have the permission "TogglePVP.state":
                                message "<red>You don't have the permission for this command!"
                                stop

                {pvp.%player%} is not set:
                        set {pvp.%player%} to {pvpsetting.default}

                {pvp.%player%} is 1:
                        message "<yellow>Your PVP Status is: &c&oactivated&r<yellow>!"

                {pvp.%player%} is 0:
                        message "<yellow>Your PVP Status is: &a&odeactivated&r<yellow>!"

command /kit [<text="help">] [<text>]:
        permission: essentials.socialspy
        trigger:
                if argument 1 is "help":
                        message "&7/kit <name> &e- Spawn a kit"
                        message "&7/kit edit <name> &e- Create/Edit a kit"
                        message "&7/kit delete <name> &e- Delete a kit"
                else if argument 1 is "edit":
                        if argument 2 is set:
                                set {kplus.kit.%argument 2%::inv} to player's serialized inventory
                                broadcast "DEBUG - &e&oSerialized inventory of %player%"
                                set {kplus.kit.%argument 2%} to arg 2
                                set {kplus.kit.%argument 2%::h} to player's helmet
                                set {kplus.kit.%argument 2%::c} to player's chestplate
                                set {kplus.kit.%argument 2%::l} to player's leggings
                                set {kplus.kit.%argument 2%::b} to player's boots
                                broadcast "DEBUG - &e&oSaved armor on %player%"
                                message "&aKit &9'%uncolored argument 2%' &aedited successfully!"
                        if value "permissions.%argument 2%" pulled from "KitsPlusConfig" is not set:
                                put "skript.kitsplus.%uncolored argument 2%" for "permissions.%argument 2%" in "KitsPlusConfig"
                        else: 
                                message "&7/kit edit <name> &e- Create/Edit a kit"
                else if argument 1 is "list":
                        message "%{kplus.kit.%argument 2%::inv}%"
                        message "%{kplus.kit.%argument 2%::h}%"
                        message "%{kplus.kit.%argument 2%::c}%"
                        message "%{kplus.kit.%argument 2%::l}%"
                        message "%{kplus.kit.%argument 2%::b}%"
                else if argument 1 is "delete":
                        if argument 2 is set:
                                if {kplus.kit.%argument 2%::*} is set:
                                        clear {kplus.kit.%argument 2%::*}
                                        message "&aKit &9'%uncolored argument 2%' &acleared successfully!"
                                else:
                                        message "&cInvalid kit."
                        else: 
                                message "&7/kit delete <name> &e- Delete a kit"
                else if argument 1 is set:
                        if argument 2 is not set:
                                if {kplus.kit.%argument 1%} is set:
                                        if player has permission "is.newbie":
                                                message "&5&oAttempting to restore %argument 1% kit..."
                                                restore inventory of player to {kplus.kit.%argument 1%::inv}
                                                set player's helmet to {kplus.kit.%argument 1%::h}
                                                set player's chestplate to {kplus.kit.%argument 1%::c}
                                                set player's leggings to {kplus.kit.%argument 1%::l}
                                                set player's boots to {kplus.kit.%argument 1%::b}
                                        else:
                                                message "&cNo permission."
                                else:
                                        message "&cInvalid kit."
                        else:
                                message "&7/kit <name> &e- Spawn a kit"