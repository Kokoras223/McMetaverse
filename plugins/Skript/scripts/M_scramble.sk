#script options:
#    $ developer mode
variables:
	{cobblehunt.blockset} = false
on script load:
	set {cobblehunt.players} to 0
	set {cobblehunt.countdown} to false
	set {cobblehunt.going} to false
	loop all players:
		set {cobblehunt.%loop-player%.ready} to false
		set {cobblehunt.%loop-player%.playing} to false
on join:
	set {cobblehunt.%player%.ready} to false
on break:
	if {cobblehunt.%player%.playing} is true:
		if event-block is cobblestone or cobble silverfish:
			if {cobblehunt.going} is false:
				cancel event
			add location of event-block to {cobblehunt.broken::*}
		else:
			cancel event
	if {cobblehunt.%player%.spectating} is true:
		cancel event
on place:
	if {cobblehunt.%player%.playing} is true:
		cancel event
		message "&cNo building while the game is going! Gotta play smart!"
command /tpscramble:
	permission: is.pro
	trigger:
		teleport player to {cobblehunt.lobby}
command /scramblecontrol:
	trigger:
		if player is op:
			if {scramblecontrol} is not set:
				set {scramblecontrol} to player
				message "You can now set the scramble controls."
			else:
				delete {scramblecontrol}
on click:
	event-block is wooden button
	if player is {scramblecontrol}:
		set {sk.leavescramble} to location of clicked block
	else:
		if location of clicked block is {sk.leavescramble}:
			make player execute "leavescramble"
on break of cobble silverfish:
	{cobblehunt.going} is true
	{cobblehunt.%player%.playing} is true
	add location of event-block to {cobblehunt.broken::*}
	loop all players:
		{cobblehunt.%loop-player%.playing} is true:
			teleport loop-player to {cobblehunt.spectate}
			teleport loop-player to {cobblehunt.spectate}
			execute console command "region removemember scramble %loop-player% -w Minigame"
			send "&c&lSTOP!" to loop-player
#			execute console command "playsound mob.ghast.scream %loop-player%"
			set {cobblehunt.%loop-player%.ready} to false
			set {cobblehunt.%loop-player%.playing} to false
			set {cobblehunt.%loop-player%.spectating} to true
	wait 2 real second
	broadcast "&a&o%player%&6&o is the winner &2&oSilverfish Scramble&6&o! They get &a$200&6&o!"
	execute console command "eco give %player% 200"
	set {cobblehunt.going} to false
	wait 3 real seconds
	execute console command "/resetscramble"
	set {cobblehunt.countdown} to false
command /leavescramble:
	trigger:
		{cobblehunt.%player%.playing} is true:
			set {cobblehunt.%player%.playing} to false
			subtract 1 from {cobblehunt.players}
			execute console command "region removemember scramble %player% -w Minigame"
		teleport player to {spawn}
		teleport player to {spawn}
command /scan:
	permission: is.pro
	trigger:
		set {cobblehunt.totalcount} to 0
		delete {cobblehunt.masterlist::*}
		loop blocks in radius 50 around {cobblehunt.spawn}:
			loop-block is cobblestone:
				add position of loop-block to {cobblehunt.masterlist::*}
				add 1 to {cobblehunt.totalcount}
command /setspot:
	permission: is.pro
	trigger:
		set {cobblehunt.spawn} to location of player
		message "SET!"
command /setlobby:
	permission: is.pro
	trigger:
		set {cobblehunt.lobby} to location of player
		message "SET!"
command /scramble:
	trigger:
#		player can't hold 36 wood swords:
#			message "&e&oClear your inventory &6&oand armor &e&obefore joining &2&oSilverfish Scramble&e&o."
#			stop
		if {cobblehunt.going} is true:
			message "&c&oA game is already in session!"
		else:
			{cobblehunt.players} is not set:
				set {cobblehunt.players} to 0
			{cobblehunt.%player%.playing} is not set:
				set {cobblehunt.%player%.playing} to false
			{cobblehunt.%player%.playing} is not true
			teleport player to {cobblehunt.lobby}
			make player execute "pet hide"
			player has the permission "essentials.fly.self":
				execute console command "fly off %player%"
				execute console command "fly %player% off"
			player has the permission "essentials.socialspy":
				execute console command "god %player% off"
				execute console command "gm 0 %player%"
			clear inventory of player
			add 1 to {cobblehunt.players}
			set {cobblehunt.%player%.playing} to true
			broadcast "&a&o%{cobblehunt.players}%&6&o users have joined &2&oSilverfish Scramble&6&o. Type &b/scramble&6&o to join."
on right click on diamond block:
	{cobblehunt.%player%.playing} is true
	if {cobblehunt.%player%.ready} is true:
		message "&cYou are sooooooooo ready it's not even funny!"
		stop
	else:
		set {cobblehunt.%player%.ready} to true
		if {cobblehunt.ready} is not set:
			set {cobblehunt.ready} to 0
		add 1 to {cobblehunt.ready}
		message "&aYou are now flagged as ready!"
		message "&6%{cobblehunt.ready}%/%{cobblehunt.players}% ready to play"
		{cobblehunt.countdown} is not true
		{cobblehunt.going} is false
		{cobblehunt.players} is not 1
		{cobblehunt.players} is not 0
		set {cobblehunt.blockset} to false
		set {randominteger1} to a random integer between 1 and {cobblehunt.totalcount}
		set block at {cobblehunt.masterlist::%{randominteger1}%} to cobble silverfish
		set location of block at {cobblehunt.masterlist::%{randominteger1}%} to cobble silverfish
		add location of block at {cobblehunt.masterlist::%{randominteger1}%} to {cobblehunt.broken::*}
		set {randominteger2} to a random integer between 1 and {cobblehunt.totalcount}
		set block at {cobblehunt.masterlist::%{randominteger2}%} to cobble silverfish
		add location of block at {cobblehunt.masterlist::%{randominteger2}%} to {cobblehunt.broken::*}
		set {randominteger3} to a random integer between 1 and {cobblehunt.totalcount}
		set block at {cobblehunt.masterlist::%{randominteger3}%} to cobble silverfish
		add location of block at {cobblehunt.masterlist::%{randominteger3}%} to {cobblehunt.broken::*}
		set {cobblehunt.countdown} to true
		broadcast "&2&oSilverfish Scramble&r&o starting in &a&l30&r&o seconds."
		wait 15 seconds
		loop all players:
			{cobblehunt.%loop-player%.playing} is true
			send "&2&oSilverfish Scramble&r&o starting in &e&l15&r&o seconds." to loop-player
		wait 10 seconds
		loop all players:
			{cobblehunt.%loop-player%.playing} is true
			set {cobblehunt.%loop-player%.session} to 0
			send "&2&oSilverfish Scramble&r&o starting in &c&l5&r&o seconds." to loop-player
			teleport loop-player to {cobblehunt.spawn}
			heal loop-player
			execute console command "/give %loop-player% 278 1 name:&2&lSiverfish_Scramble_Pickaxe efficiency:5"
			execute console command "feed %loop-player%"
		wait 5 second
		loop all players:
			{cobblehunt.%loop-player%.playing} is true
			execute console command "region addmember scramble %loop-player% -w Minigame"
			send "&2&oSilverfish Scramble has begun!" to loop-player
		set {cobblehunt.going} to true
on damage of player:
	if {cobblehunt.%victim%.playing} is true:
		cancel event
	if {cobblehunt.%victim%.spectating} is true:
		cancel event
on disconnect:
	if {cobblehunt.%player%.playing} is true:
		subtract 1 from {cobblehunt.players}
		execute console command "region removemember scramble %player% -w Minigame"
		teleport player to {spawn}
		teleport player to {spawn}
	if {cobblehunt.%player%.ready} is true:
		set {cobblehunt.%player%.ready} to false
on login:
	if {cobblehunt.%player%.playing} is true:
		teleport player to {spawn}
		set {cobblehunt.%player%.playing} to false
	if {cobblehunt.%player%.spectating} is true:
		teleport player to {spawn}
		set {cobblehunt.%player%.spectating} to false
on command:
	{cobblehunt.%player%.playing} is true:
		if command is not "a" or "login" or "leave" or "leavescramble":
			message "&e&oNo commands permitted while playing &2&oSilverfish Scramble&e&o."
			cancel the event
			stop
	{cobblehunt.%player%.spectating} is true:
		if command is not "a" or "login" or "leave" or "leavescramble":
			message "&e&oNo commands permitted while playing &2&oSilverfish Scramble&e&o."
			cancel the event
command /resetscramble:
	permission: cobblehunt.reset
	trigger:
		set {cobblehunt.going} to false
		delete {cobblehunt.players}
		delete {cobblehunt.ready}
		set block at {cobblehunt.masterlist::%{randominteger1}%} to cobble
		set block at {cobblehunt.masterlist::%{randominteger2}%} to cobble
		set block at {cobblehunt.masterlist::%{randominteger3}%} to cobble
		loop {cobblehunt.broken::*}:
			set block at loop-value to cobblestone
		wait 5 real seconds
		loop all players:
			{cobblehunt.%loop-player%.spectating} is true:
				set {cobblehunt.%loop-player%.spectating} to false
				delete inventory of loop-player
				execute console command "region removemember scramble %loop-player% -w Minigame"
				make loop-player execute "/spawn"
				make loop-player execute "/spawn"
		delete {cobblehunt.broken::*}
		set {cobblehunt.countdown} to false