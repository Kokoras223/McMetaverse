#script options:
#    $ developer mode
on script load:
	if {bank.day} is not set:
		set {bank.day} to 0
	add 1 to {bank.day}
command /banker:
	permission: is.pro
	trigger:
		spawn 1 librarian at location of player
		loop all entities in radius 2 of player:
			set name of loop-entity to "&6&lBank Teller"
		play "LEVEL_UP" specifically to player with pitch 1
		message "&cAdded!"

on rightclick on librarian:
	name of clicked entity contains "&6&lBank Teller"
	cancel event
	send "&f[&6&lBank Teller&f] &eGreetings %player%! What would you like to do?" to player
	wait 1 real second
	set {_bal} to "%player's balance%"
	replace all "$" with "" in {_bal}
	set {_temp.number} to {_bal} parsed as number
	send "&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-" to player
	send umbaska json of "&f[ &bWithdraw All &f(&a$%{bank.vault::%UUID of player%}%&f) &f]" run "/withdraw %{bank.vault::%UUID of player%}-0.01%" to player
	send umbaska json of "&f[ &bWithdraw &a$10,000 &f]" run "/withdraw 10000" to player
	send umbaska json of "&f[ &bWithdraw &a$1,000 &f]" run "/withdraw 1000" to player
	send umbaska json of "&f[ &bWithdraw &a$100 &f]" run "/withdraw 100" to player
	send umbaska json of "&f[ &cDeposit &a$100 &f]" run "/deposit 100" to player
	send umbaska json of "&f[ &cDeposit &a$1,000 &f]" run "/deposit 1000" to player
	send umbaska json of "&f[ &cDeposit &a$10,000 &f]" run "/deposit 10000" to player
	send umbaska json of "&f[ &cDeposit All &f(&a%player's balance%&f) ]" run "/deposit %{_temp.number}%" to player
	send "&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-" to player
	send "&6Current Balance: &a%player's balance%" to player
	send "&6Bank Account Total: &a$%{bank.vault::%UUID of player%}%" to player
	send "&6Total Interest Earned: &a$%{bank.interest::%UUID of player%}%" to player
	send "&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-&b&l-&f&l-" to player
	send "&f[&6&lBank Teller&f] &eClick what you want to do!" to player
	set {banking.%player%} to true
	wait 1 real minute
	{banking.%player%} is true
	set {banking.%player%} to false
on join:
	if {bank.%player%.day} is not set:
		set {bank.%player%.day} to 0
	if {bank.interest::%UUID of player%} is not set:
		set {bank.interest::%UUID of player%} to 0
	wait 2 real minutes
	player is online
	if {bank.%player%.day} is not {bank.day}:
		set {bank.%player%.day} to {bank.day}
		set {_interest} to {bank.vault::%UUID of player%} * 0.002
		message "&f[&6BANK&f] &aYou just got $%{_interest}% in daily interest!"
		add {_interest} to {bank.vault::%UUID of player%}
		add {_interest} to {bank.interest::%UUID of player%}
command /setbank:
	permission: is.pro
	trigger:
		set {bank} to player's location
		message "&aDone!"

command /deposit <number>:
	trigger:
		if {banking.%player%} is true:
			if arg is set:
				if {bank.vault::%UUID of player%} is not set:
					set {bank.vault::%UUID of player%} to 0
				if player's balance is greater than or equal to arg:
					execute console command "eco take %player% %arg%"
					add arg to {bank.vault::%UUID of player%}
					message "&6Successfuly deposited &a$%arg%&6!"
					message "&6Bank Account Total: &a$%{bank.vault::%UUID of player%}%"
				else:
					message "&cYou don't have &a$%arg%&c to deposit!"
					stop
			else:
				message "&cIncorrect usage. Try doing &a/deposit (amount)"
		else:
			message "&cYou must use a banker in the bank &a/spawn&c."
on join:
	set {banking.%player%} to false
	if size of {accounts.%UUID of player%::*} is 0:
		add player to {accounts.%UUID of player%::*}
		stop
	loop {accounts.%UUID of player%::*}:
		if loop-value is "%player%":
			stop
	add player to {accounts.%UUID of player%::*}
	wait 3 real seconds
	loop all players:
		loop-player has the permission "essentials.socialspy":
			send "&f[&bINFO&f] &e%player%&6 has changed their username from something. Here is their list of registered usernames for their UUID:" to loop-player
			send "&f%{accounts.%UUID of player%::*}%" to loop-player
command /accounts <player>:
	permission: essentials.socialspy
	trigger:
		message "&aAccounts of %arg%: &6%{accounts.%UUID of argument-player%::*}%"
command /withdraw <number>:
	trigger:
		if {banking.%player%} is true:
			if arg is set:
				if {bank.vault::%UUID of player%} is not set:
					set {bank.vault::%UUID of player%} to 0
				if {bank.vault::%UUID of player%} is greater than or equal to arg:
					subtract arg from {bank.vault::%UUID of player%}
					execute console command "eco give %player% %arg%"
					message "&6Successfuly withdrew &a$%arg%&6!"
					message "&6Bank Account Total: &a$%{bank.vault::%UUID of player%}%"
				else:
					message "&cYou don't have &a$%arg%&c in the bank to withdraw!"
					stop
			else:
				message "&cIncorrect usage. Try doing &a/deposit (amount)"
		else:
			message "&cYou must use a banker in the bank &a/spawn&c."
command /bank <offlineplayer=%player%>:
	trigger:
		if {bank.vault::%UUID of player%} is not set:
			set {bank.vault::%UUID of player%} to 0
		if {bank.vault::%UUID of arg%} is set:
			if argument is not player:
				if player has permission "essentials.socialspy":
					message "&6Bank Account Total: &a$%{bank.vault::%UUID of arg%}%"
					message "&6Total Interest Earned: &a$%{bank.interest::%UUID of arg%}%"
				else:
					message "&cCan't view another player's bank account!"
			else:
				message "&6Bank Account Total: &a$%{bank.vault::%UUID of arg%}%"
				message "&6Total Interest Earned: &a$%{bank.interest::%UUID of arg%}%"
		else:
			message "&cError: &4Player does not have a Bank Account yet!"
command /debugbank:
	permission: is.op
	trigger:
		loop {bank.vault::*}:
			message "%{accounts.%loop-index%::1}% - %loop-value%"

on command "bal" or "/balance" or "money":
	wait 2 ticks
	message "&6To check your bank total, execute &a&o/bank&r&6."
