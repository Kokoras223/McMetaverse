script options:
    $ developer mode
# ###################################
# ##   Parkour Timer Version 1.0   ##
# ###################################
# ## Author: MrProtagonist         ##
# ## Created for: The Metaverse    ##
# ## Web: McMetaverse.com          ##
# ## IP: S12.hosthorde.com:25573   ##
# ###################################
variables:
	{parkour.running} = false
	{parkour.isused} = false
	{parkour.time} = 0
	{parkour.bounce} = 2
	{parkour.launched} = false
on script load:
	set {parkour.running} to false
	set {parkour.isused} to false
	set {parkour.isused} to 0
	set {parkour.best} to 0
	set {parkour.time} to 0
command /setparkour:
	trigger:
		set {parkour.start} to location of player
every 2 ticks:
	{parkour.running} is true
	execute console command "tm amsg %{parkour.player}% &f%difference between now and {parkour.started}%"
command /parkour:
	trigger:
		if {parkour.isused} is true:
			message "&cSomebody is already on the track! Try again soon!"
			stop
		else:
			set {parkour.isused} to true
			set {parkour.player} to player
			message "&6Your run and the timer will begin in 10 seconds."
			message "&eGood luck!"
			teleport player to {parkour.start}
			wait 5 real seconds
			message "&b&l5"
			wait 1 real second
			message "&b&l4"
			wait 1 real second
			message "&b&l3"
			wait 1 real second
			message "&b&l2"
			wait 1 real second
			message "&b&l1"
			wait 1 real second
			message "&a&lGO!"
			loop {parkour.gate::*}:
				set block at loop-value to air
			set {parkour.running} to true
			set {parkour.started} to now
			set {parkour.counter} to 0
			set {parkour.checkpoint} to location of player
on walking on glowstone:
	{parkour.isused} is true
	player is {parkour.player}
	distance between {parkour.checkpoint} and player is greater than 10
	set {parkour.checkpoint} to location of player
	message "&aCheckpoint!"
on damage of a player:
	victim is {parkour.player}
	if damage was caused by lava:
		cancel event
		teleport victim to {parkour.checkpoint}
		wait 15 ticks
		extinguish the victim
		execute console command "heal %victim%"
every real second:
	{parkour.running} is true
	add 1 to {parkour.counter}
command /finishedrun:
	permission: is.console
	trigger:
		set {parkour.time} to difference between now and {parkour.started}
		send "&aFinished run in: &6%{parkour.time}%" to {parkour.player}
		set {parkour.isused} to false
		set {parkour.running} to false
		delete {parkour.running}
		if {parkour.counter} is greater than {parkour.best}:
			broadcast "&a&l%{parkour.player}%&e just set the &4&lParkour&e high score with &6&l%{parkour.time}%&e!"
		teleport {parkour.player} to {spawn}
		teleport {parkour.player} to {spawn}
		loop {parkour.gate::*}:
			set block at loop-value to fence
#on walk on sponge:
#	player is in world "Creative"
#	{parkour.launched} is false
#	set {parkour.launched} to true
#	push the player upwards at speed 1.8
#	wait 5 ticks
#	set {parkour.launched} to false
#on damage of a player:
#	{parkour.player} is player
#	cancel event
#on right click with fishing rod:
#	name of player's tool is "Grappling Hook"
#	cancel event
#	{grappling.%player%.reloading} is not set:
#		set {grappling.%player%.reloading} to false
#	{parkour.hooked} is not set:
#		set {parkour.hooked} to false
#	{grappling.%player%.reloading} is true:
#		message "&cGrappling Hook not reloaded!"
#		stop
#	shoot arrow from player at speed 2.0
#	set {grappling.%player%.reloading} to true
#	wait 3 real seconds
#	set {parkour.hooked} to false
#	message "&a&o&lGrappling Hook reloaded!"
#	set {grappling.%player%.reloading} to false
	
on pickup:
	{parkour.player} is player
	cancel event

on command:
	if {parkour.isused} is true:
		command is not "leaveparkour" or "a" or "login"
		message "&e&oNo commands permitted while playing parkour."
		message "&e&o/leaveparkour &e&oto quit."
		cancel the event

command /leaveparkour:
	trigger:
		if {parkour.isused} is true:
			message "&e&oYou have left parkour, your time is deleted."
			teleport player to {spawn}
			teleport player to {spawn}
			set {parkour.running} to false
			set {parkour.isused} to false
			delete {parkour.started}
			delete {parkour.player}
			set {parkour.counter} to 0

#on projectile hit:
#	shooter's tool is fishing rod named "Grappling Hook"
#	projectile is arrow
#	set {_block} to location of the projectile
#	loop blocks in radius 2 of {_block}:
#		{parkour.hooked} is false
#		loop-block is oak log
#		message "&a&oThe hook latched!" to shooter
#		set {parkour.hooked} to true
#		wait 1 real second
#		teleport shooter to {_block}
#		stop
#	{parkour.hooked} is false
#	message "&c&oMissed!" to shooter
	
